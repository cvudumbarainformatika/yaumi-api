version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: yaumi_app
    ports:
      - "9001:9000"
    restart: unless-stopped
    environment:
      - APP_ENV=production
    volumes:
      - ./docker-compose/php/php.prod.ini:/usr/local/etc/php/php.ini:ro
      - /opt/env/yaumi/.env.production:/var/www/.env:ro
    depends_on:
      mysql:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - ryuuunet

  nginx:
    image: nginx:alpine
    container_name: yaumi_nginx
    restart: unless-stopped
    depends_on:
      app:
        condition: service_started
    ports:
      - "8182:80"
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d
    networks:
      - ryuuunet

  meilisearch:
    image: vikpe/meilisearch-arm64
    container_name: yaumi_meilisearch
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_KEY:-masterKey}
      - MEILI_NO_ANALYTICS=true
      - MEILI_ENV=development
    ports:
      - "7700:7700"
    volumes:
      - meili_data:/meili_data
    networks:
      - ryuuunet
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:7700/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8.0
    container_name: yaumi_mysql
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker-compose/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - ryuuunet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: yaumi_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ryuuunet
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  ryuuunet:
    driver: bridge

volumes:
  dbdata:
  meili_data:
  redis_data:
